{"version":3,"sources":["logo_berna.png","Header.js","SearchInput.js","EmojiResultRow.js","EmojiResults.js","filterEmoji.js","App.js","index.js"],"names":["module","exports","Header","className","src","require","width","height","alt","PureComponent","SearchInput","handleChange","event","props","textChange","onChange","this","EmojiResultsRow","data-clipboard-text","symbol","title","descrip","EmojiResults","clipboard","Clipboard","destroy","emojiData","map","key","filterEmoji","searchText","maxResults","emojiList","filter","emoji","toLowerCase","includes","keywords","slice","App","handleSearchChange","setState","filteredEmoji","target","value","state","ReactDOM","render","document","getElementById"],"mappings":"20FAAAA,EAAOC,QAAU,IAA0B,wC,6KCGtBC,G,6KAEjB,OACE,4BAAQC,UAAU,oBAChB,yBACEC,IAAKC,EAAQ,IACbC,MAAM,KACNC,OAAO,KACPC,IAAI,KALR,sB,GAH8BC,kBCEfC,G,kNAKnBC,aAAe,SAAAC,GACb,EAAKC,MAAMC,WAAWF,I,uDAItB,OACE,yBAAKT,UAAU,0BACb,6BACE,2BAAOY,SAAUC,KAAKL,qB,GAbSF,kB,gBCDpBQ,G,6KAQjB,OACE,yBACEd,UAAU,+CACVe,sBAAqBF,KAAKH,MAAMM,QAEjC,yBAAKhB,UAAU,QACd,yBAAKA,UAAU,SAASa,KAAKH,MAAMO,OACnC,yBAAKjB,UAAU,WAAWa,KAAKH,MAAMQ,UAEtC,yBAAKlB,UAAU,QAAQa,KAAKH,MAAMM,a,GAjBIV,kBCGxBa,G,wLAMjBN,KAAKO,UAAY,IAAIC,IAAU,wB,6CAI/BR,KAAKO,UAAUE,Y,+BAIf,OACE,yBAAKtB,UAAU,2BACZa,KAAKH,MAAMa,UAAUC,KAAI,SAAAD,GAAS,OACjC,kBAAC,EAAD,CACEE,IAAKF,EAAUN,MACtBC,QAASK,EAAUL,QACZF,OAAQO,EAAUP,OAClBC,MAAOM,EAAUN,gB,GArBaX,kB,OCL3B,SAASoB,EAAYC,EAAYC,GAC9C,OAAOC,EACJC,QAAO,SAAAC,GACN,QAAIA,EAAMd,MAAMe,cAAcC,SAASN,EAAWK,kBAG9CD,EAAMG,SAASD,SAASN,MAK7BQ,MAAM,EAAGP,G,ICPOQ,E,kDACnB,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAMR2B,mBAAqB,SAAA5B,GACnB,EAAK6B,SAAS,CACZC,cAAeb,EAAYjB,EAAM+B,OAAOC,MAAO,OAPjD,EAAKC,MAAQ,CACXH,cAAeb,EAAY,GAAI,MAHhB,E,qDAcjB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAaf,WAAYE,KAAKwB,qBAC9B,kBAAC,EAAD,CAAcd,UAAWV,KAAK6B,MAAMH,qB,GAnBXjC,iB,YCAjCqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4bd867d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_berna.7c5b7695.png\";","import React, { PureComponent } from \"react\";\nimport \"./Header.css\";\n\nexport default class Header extends PureComponent {\n  render() {\n    return (\n      <header className=\"component-header\">\n        <img\n          src={require('./logo_berna.png')}\n          width=\"32\"\n          height=\"32\"\n          alt=\"\"\n        />\n        Buerguer Berna\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./SearchInput.css\";\n\nexport default class SearchInput extends PureComponent {\n  static propTypes = {\n    textChange: PropTypes.func\n  };\n\n  handleChange = event => {\n    this.props.textChange(event);\n  };\n\n  render() {\n    return (\n      <div className=\"component-search-input\">\n        <div>\n          <input onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./EmojiResultRow.css\";\n\nexport default class EmojiResultsRow extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    descrip: PropTypes.string,\n    symbol: PropTypes.string\n  };\n\n  render() {\n    return (\n      <div\n        className=\"component-emoji-result-row copy-to-clipboard\"\n        data-clipboard-text={this.props.symbol}\n      >\n      \t<div className=\"item\">\n      \t\t<div className=\"title\">{this.props.title}</div>\n      \t\t<div className=\"descrip\">{this.props.descrip}</div>\n      \t</div>\n      \t<div className=\"info\">{this.props.symbol}</div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Clipboard from \"clipboard\";\n\nimport EmojiResultRow from \"./EmojiResultRow\";\nimport \"./EmojiResults.css\";\n\nexport default class EmojiResults extends PureComponent {\n  static propTypes = {\n    emojiData: PropTypes.array\n  };\n\n  componentDidMount() {\n    this.clipboard = new Clipboard(\".copy-to-clipboard\");\n  }\n\n  componentWillUnmount() {\n    this.clipboard.destroy();\n  }\n\n  render() {\n    return (\n      <div className=\"component-emoji-results\">\n        {this.props.emojiData.map(emojiData => (\n          <EmojiResultRow\n            key={emojiData.title}\n\t    descrip={emojiData.descrip}\n            symbol={emojiData.symbol}\n            title={emojiData.title}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import emojiList from \"./emojiList.json\";\n\nexport default function filterEmoji(searchText, maxResults) {\n  return emojiList\n    .filter(emoji => {\n      if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\n        return true;\n      }\n      if (emoji.keywords.includes(searchText)) {\n        return true;\n      }\n      return false;\n    })\n    .slice(0, maxResults);\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"./Header\";\nimport SearchInput from \"./SearchInput\";\nimport EmojiResults from \"./EmojiResults\";\nimport filterEmoji from \"./filterEmoji\";\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredEmoji: filterEmoji(\"\", 100)\n    };\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      filteredEmoji: filterEmoji(event.target.value, 20)\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <SearchInput textChange={this.handleSearchChange} />\n        <EmojiResults emojiData={this.state.filteredEmoji} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}